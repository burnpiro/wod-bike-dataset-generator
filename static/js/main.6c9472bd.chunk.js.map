{"version":3,"sources":["components/Layout/Layout.js","hooks/useFetchData.js","helpers.js","hooks/useFetchNodes.js","hooks/useTimer.js","components/Navigation/Navigation.js","components/Network/Network.js","components/App/App.js","serviceWorker.js","index.js","components/Layout/logo.svg"],"names":["Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","main","minHeight","logo","maxHeight","footer","position","bottom","width","backgroundColor","palette","background","paper","padding","currentUsageLabel","marginLeft","Layout","children","usage","rent","percentage","classes","Fragment","CssBaseline","AppBar","Toolbar","src","alt","className","noWrap","style","display","flex","Divider","orientation","flexItem","Box","CircularProgress","value","size","thickness","top","left","right","alignItems","justifyContent","component","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useFetchData","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","didCancel","a","axios","result","fetchData","nodeMetrics","name","preprocessNodes","nodes","lat","map","row","lng","ids","names","lon","mode","marker","hoverinfo","text","scl","useFetchNodes","nodesData","isNodesLoading","isNodesError","pathsData","isPathsLoading","isPathsError","list","Object","values","obj","paths","useTimer","initialTime","interval","step","timerType","endTime","onTimeOver","time","setTime","isRunning","setIsRunning","isTimeOver","setIsTimeOver","reset","useCallback","newTime","start","pause","intervalId","setInterval","previousTime","clearInterval","navigationContainer","marginTop","flexDirection","sliders","buttons","formElement","marginBottom","months","label","hourMarks","Array","fill","val","id","valueText","Math","floor","Navigation","onDayChange","onHourChange","onMonthChange","onAnimationChange","day","month","setMonth","days","setDays","daysMarks","currentTime","FormControl","InputLabel","Select","labelId","onChange","event","target","selectedMonth","find","curr","num","MenuItem","key","ButtonGroup","disableElevation","Button","onClick","Slider","newValue","defaultValue","min","max","aria-labelledby","marks","splice","getAriaValueText","valueLabelFormat","overlay","height","paddingTop","layout","dragmode","mapbox","center","zoom","margin","r","t","b","l","autoexpand","autosize","automargin","showlegend","Network","showNodes","showPaths","nodeMetric","maxNumOfPaths","useTrend","onUsageChange","frames","setFrames","frameId","setFrameId","setDay","monthData","isMonthLoading","doFetchMonth","monthMetricsData","isMonthMetricsLoading","doFetchMonthMetrics","monthUsageData","isMonthUsageLoading","doFetchUsageMetrics","metrics","metricKey","usePrev","prevMetrics","prevMetricTwo","node","currMetric","metr","o","metricValue","ceil","log2","reduce","acc","arr","length","colorscale","cmin","cmax","opacity","hoverlabel","bgcolor","hovertext","metric","join","fillNodesMetricData","pathData","path","line","fillPathsWithData","slice","usageData","bu","total","bt","round","bp","hour","console","log","useResizeHandler","toolbarIcon","mixins","toolbar","drawerPaper","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","menuContainer","pathOptions","App","React","open","setOpen","setUseTrend","setShowNodes","setShowPaths","setNodeMetric","numOfPaths","setNumOfPaths","currentUsage","setCurrentUsage","Drawer","IconButton","Container","FormLabel","FormGroup","FormControlLabel","control","Checkbox","checked","numData","FormHelperText","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.6c9472bd.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport logo from './logo.svg'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  main: {\n    minHeight: 'calc(100vh - 80px)',\n  },\n  logo: {\n    maxHeight: 32,\n    marginRight: theme.spacing(2)\n  },\n  footer: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100vw',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2),\n  },\n  currentUsageLabel: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    backgroundColor: 'rgba(255,255,255,0.3)'\n  },\n}));\n\nexport default function Layout({children, usage: {rent, percentage}}) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <img src={logo} alt=\"WRM Logo\" className={classes.logo}/>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            WRM Network\n          </Typography>\n          <div style={{display: 'flex', flex: 1}} />\n          <Typography variant=\"h5\" color=\"inherit\" noWrap>\n            Total bikes in rent: {rent}\n          </Typography>\n          <Divider orientation=\"vertical\" flexItem  className={classes.currentUsageLabel}/>\n          <Typography variant=\"h5\" color=\"inherit\" noWrap>\n            Current Usage\n          </Typography>\n          <Box position=\"relative\" display=\"inline-flex\">\n            <CircularProgress variant=\"static\" value={percentage} color=\"secondary\"\n                              size={60}\n                              thickness={8}/>\n            <Box\n              top={0}\n              left={0}\n              bottom={0}\n              right={0}\n              position=\"absolute\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Typography variant=\"button\" component=\"div\" color=\"inherit\" >{`${percentage}%`}</Typography>\n            </Box>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.main}>\n        { children }\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useFetchData = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_INIT\" });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_FAILURE\" });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl];\n};\n\nexport default useFetchData;\n","export const preprocessPaths = (paths = {}) => {\n  return paths.map((row) => ({\n    type: \"scattermapbox\",\n    lat: row.lng,\n    lon: row.lat,\n    mode: \"lines\",\n    line: { width: 4, color: \"red\" },\n    id: row.id,\n    text: `Connection between ${row.id}`,\n  }));\n};\n\nexport const nodeMetrics = [\n  {\n    name: \"Degree\",\n    value: \"k\",\n  },\n  {\n    name: \"In Degree\",\n    value: \"ik\",\n  },\n  {\n    name: \"Out Degree\",\n    value: \"ok\",\n  },\n  {\n    name: \"PageRank\",\n    value: \"p\",\n  },\n];\n\nexport const preprocessNodes = (nodes = {}) => {\n  const lat = nodes.map((row) => row[\"lat\"]);\n  const lng = nodes.map((row) => row[\"lng\"]);\n  const ids = nodes.map((row) => row[\"id\"]);\n  const names = nodes.map((row) => row[\"name\"]);\n  return [\n    {\n      type: \"scattermapbox\",\n      lat: lat,\n      lon: lng,\n      ids: ids,\n      mode: \"markers\",\n      marker: {\n        size: 14,\n        color: \"blue\",\n      },\n      hoverinfo: \"text\",\n      text: names,\n    },\n  ];\n};\n\nexport const generateRandomFile = () => {\n  return Array(31)\n    .fill(1)\n    .reduce((acc, value, index) => {\n      acc[index + 1] = Array(1440 / 15)\n        .fill(0)\n        .reduce((dayAcc, dayVal, dayId) => {\n          dayAcc[dayId * 15] = Array(Math.floor(Math.random() * 15) + 1)\n            .fill(1)\n            .map((el, index) => {\n              const org = Math.floor(Math.random() * 202)\n              const dest = Math.floor(Math.random() * 204)\n              return {\n                o: org,\n                d: org === dest ? dest + 1 : dest,\n                c: Math.floor(Math.random() * 30) + 1,\n              }\n            });\n          dayAcc[dayId * 15].sort((a, b) => b.c - a.c)\n          return dayAcc;\n        }, {});\n      return acc;\n    }, {});\n};\n\nexport const fillPathsWithData = (paths = {}, nodes = {}) => {\n  return (pathData = {}) => {\n    const path = paths[`${pathData[\"o\"]}-${pathData[\"d\"]}`];\n    return {\n      type: \"scattermapbox\",\n      lat: path == null ? [] : path.lng,\n      lon: path == null ? [] : path.lat,\n      mode: \"lines\",\n      line: { width: pathData[\"c\"]*2, color: \"rgba(255,0,0,0.5)\" },\n      id: path == null ? [] : path.id,\n      hoverinfo: \"text\",\n      hovertext: path == null ? 'unknown' : `<span style=\"font-size: 18px\">\"${nodes[pathData[\"o\"]].name}\" <b>&#8658;</b> \"${nodes[pathData[\"d\"]].name}\"</span> <br>Bicycles on path: ${pathData[\"c\"]}`,\n    };\n  };\n};\n\nconst scl = [[0, 'rgb(0, 0, 200)'],[0.25,'rgb(0, 25, 255)'],[0.375,'rgb(0, 152, 255)'],[0.5,'rgb(44, 255, 150)'],[0.625,'rgb(151, 255, 0)'],[0.75,'rgb(255, 234, 0)'],[0.875,'rgb(255, 111, 0)'],[1,'rgb(255, 0, 0)']];\n\nexport const fillNodesMetricData = (metrics = {}, metricKey = 'k', usePrev = false, prevMetrics, prevMetricTwo) => {\n  return (node = {}) => {\n    return {\n      type: \"scattermapbox\",\n      lat: node.lat,\n      lon: node.lon,\n      ids: node.ids,\n      mode: \"markers\",\n      marker: {\n        size: node.ids.map(id => {\n          const currMetric = metrics.find(metr => metr.o === id)\n          if(currMetric == null) {\n            return 4;\n          }\n          const metricValue = metricKey === 'p' ? Math.max((7*8 + Math.ceil(Math.log2(currMetric[metricKey]))*7)/3, 1) : currMetric[metricKey];\n          return Math.ceil(Math.log2(metricValue))*8\n        }),\n        color: node.ids.map(id => {\n          const currMetric = metrics.find(metr => metr.o === id)\n          if(currMetric == null) {\n            return 'blue';\n          }\n          const metricValue = metricKey === 'p' ? Math.max((9*8 + Math.ceil(Math.log2(currMetric[metricKey]))*9)/3, 0) : currMetric[metricKey];\n          if(usePrev) {\n            const prev = prevMetrics.find(metr => metr.o === id) || currMetric\n            const prev2 = prevMetricTwo.find(metr => metr.o === id) || currMetric\n            const avg = [currMetric, prev, prev2].reduce((acc, val, id, arr) => {\n              if(metricKey === 'p') {\n                acc += Math.max((9*8 + Math.ceil(Math.log2(val['p']))*9)/3, 0)/arr.length\n              } else {\n                acc += val[metricKey]/arr.length\n              }\n              return acc\n            }, 0)\n\n            return (metricValue - avg)*2 + 5\n          }\n          return metricValue\n        }),\n        colorscale: scl,\n        cmin: 0,\n        cmax: 15,\n        opacity: 0.8,\n      },\n      hoverinfo: \"text\",\n      hoverlabel: {\n        bgcolor: 'rgb(255, 234, 0)'\n      },\n      hovertext: node.ids.map(id => {\n        const currMetric = metrics.find(metr => metr.o === id)\n        if(currMetric == null) {\n          return `<span style=\"font-size: 14px\"><b>Name:</b> ${node.text[id]}</span> <br><b>Metrics:</b> UNAVAILABLE`;\n        }\n        return `<span style=\"font-size: 14px\"><b>Name:</b> ${node.text[id]}</span> <br><b>Metrics:</b><br>${nodeMetrics.map(metric => `${metric.name}: ${currMetric[metric.value]}<br>`).join('')}`\n      }),\n    };\n  };\n};\n","import React from \"react\";\nimport useFetchData from \"./useFetchData\";\n\nimport {preprocessNodes} from \"../helpers\";\n\nconst useFetchNodes = () => {\n  const [\n    { data: nodesData, isLoading: isNodesLoading, isError: isNodesError },\n    doFetchNodes,\n  ] = useFetchData(\"nodes_list.json\", {});\n  const [\n    { data: pathsData, isLoading: isPathsLoading, isError: isPathsError },\n    doFetchPaths,\n  ] = useFetchData(\"paths_reduced-e10.json\", {});\n\n  return [\n    {\n      nodes: {\n        list: preprocessNodes(Object.values(nodesData)),\n        obj: nodesData\n      },\n      paths: {\n        obj: pathsData\n      },\n    },\n    isNodesLoading || isPathsLoading,\n    isNodesError || isPathsError,\n  ];\n};\n\nexport default useFetchNodes;\n","import { useCallback, useEffect, useState } from \"react\";\n\nconst useTimer = ({\n  initialTime = 0,\n  interval = 2000,\n  step = 1,\n  timerType = \"INCREMENTAL\",\n  endTime,\n  onTimeOver,\n}) => {\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isTimeOver, setIsTimeOver] = useState(false);\n\n  const reset = useCallback((newTime) => {\n    setIsRunning(false);\n    setIsTimeOver(false);\n    setTime(newTime ? newTime : initialTime);\n  }, [initialTime]);\n\n  const start = useCallback((time) => {\n    if (isTimeOver) {\n      reset();\n    }\n    if (time) {\n      reset(time)\n    }\n\n    setIsRunning(true);\n  }, [reset, isTimeOver]);\n\n  const pause = useCallback(() => {\n    setIsRunning(false);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && time === endTime) {\n      setIsRunning(false);\n      setIsTimeOver(true);\n\n      if (typeof onTimeOver === \"function\") {\n        onTimeOver();\n      }\n    }\n  }, [endTime, onTimeOver, time, isRunning]);\n\n  useEffect(() => {\n    let intervalId = null;\n\n    if (isRunning) {\n      intervalId = setInterval(() => {\n        setTime((previousTime) =>\n          timerType === \"DECREMENTAL\"\n            ? previousTime - step\n            : previousTime + step\n        );\n      }, interval);\n    } else if (intervalId) {\n      clearInterval(intervalId);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isRunning, step, timerType, interval]);\n\n  return { isRunning, pause, reset, start, time };\n};\n\nexport default useTimer","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  navigationContainer: {\n    padding: theme.spacing(0, 8),\n    marginTop: theme.spacing(2),\n    marginLeft: theme.spacing(4),\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  sliders: {\n    width: \"90%\",\n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginRight: theme.spacing(4),\n  },\n  formElement: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst months = [\n  {\n    value: [3, 31],\n    label: \"March\",\n  },\n  {\n    value: [4, 30],\n    label: \"April\",\n  },\n  {\n    value: [5, 31],\n    label: \"May\",\n  },\n  {\n    value: [6, 30],\n    label: \"June\",\n  },\n  {\n    value: [7, 31],\n    label: \"July\",\n  },\n  {\n    value: [8, 31],\n    label: \"August\",\n  },\n  {\n    value: [9, 30],\n    label: \"September\",\n  },\n  {\n    value: [10, 31],\n    label: \"October\",\n  },\n  {\n    value: [11, 30],\n    label: \"November\",\n  },\n  {\n    value: [12, 31],\n    label: \"December\",\n  },\n];\n\nconst hourMarks = Array(1440 / 60)\n  .fill(0)\n  .map((val, id) => ({\n    label: `${id}:00`,\n    value: id * 4,\n  }));\n\nconst valueText = (value) => {\n  return `${Math.floor((value * 15) / 60)}:${\n    (value * 15) % 60 === 0 ? \"00\" : (value * 15) % 60\n  }`;\n};\n\nexport default function Navigation({\n  onDayChange,\n  onHourChange,\n  onMonthChange,\n  onAnimationChange,\n  time = 0,\n  day = 1,\n}) {\n  const classes = useStyles();\n  const [month, setMonth] = useState(4);\n  const [days, setDays] = useState(30);\n  const daysMarks = Array(days)\n    .fill(0)\n    .map((val, id) => ({ value: id + 1, label: id + 1 }));\n\n  const handleMonthChange = (event) => {\n    const val = event.target.value;\n    const selectedMonth = months.find((curr) => curr.value[0] === val)\n    setMonth(val);\n    setDays(selectedMonth.value[1]);\n    onMonthChange({\n      num: val,\n      days: selectedMonth.value[1]\n    })\n  };\n\n  const currentTime = `${Math.floor((time * 15) / 60)}:${\n    (time * 15) % 60 === 0 ? \"00\" : (time * 15) % 60\n  }`;\n\n  const handleDayChange = (event, newValue) => {\n    onDayChange(newValue)\n  }\n\n  const handleHourChange = (event, newValue) => {\n    onHourChange(newValue)\n  }\n\n  const startAnimation = () => {\n    onAnimationChange('play')\n  }\n\n  const stopAnimation = () => {\n    onAnimationChange('pause')\n  }\n\n  return (\n    <div className={classes.navigationContainer}>\n      <div className={classes.buttons}>\n        <FormControl className={classes.formElement}>\n          <InputLabel id=\"nodeMetric-label\">Month</InputLabel>\n          <Select\n            labelId=\"nodeMetric-label\"\n            id=\"nodeMetric\"\n            value={month}\n            onChange={handleMonthChange}\n          >\n            {months.map((curr) => (\n              <MenuItem key={curr.label} value={curr.value[0]}>\n                {curr.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n          <Button onClick={startAnimation}>Play</Button>\n          <Button onClick={stopAnimation}>Pause</Button>\n        </ButtonGroup>\n      </div>\n      <div className={classes.sliders}>\n        <Typography variant=\"h5\" color=\"inherit\" noWrap>\n          Time: {currentTime}, {day} {months[month - 3].label} 2019\n        </Typography>\n        <Slider\n          value={day}\n          onChange={handleDayChange}\n          defaultValue={1}\n          min={1}\n          max={days}\n          aria-labelledby=\"discrete-slider-always\"\n          marks={daysMarks.splice(0, days)}\n          step={1}\n        />\n        <Slider\n          value={time}\n          onChange={handleHourChange}\n          defaultValue={0}\n          min={0}\n          max={92 + 3}\n          getAriaValueText={valueText}\n          valueLabelFormat={valueText}\n          aria-labelledby=\"discrete-slider-always\"\n          step={1}\n          marks={hourMarks}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Plot from \"react-plotly.js\";\nimport spacetime from \"spacetime\";\nimport useFetchNodes from \"../../hooks/useFetchNodes\";\nimport useTimer from \"../../hooks/useTimer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useFetchData from \"../../hooks/useFetchData\";\nimport {\n  generateRandomFile,\n  fillPathsWithData,\n  fillNodesMetricData,\n} from \"../../helpers\";\nimport Navigation from \"../Navigation/Navigation\";\n\nconst useStyles = makeStyles((theme) => ({\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vw\",\n    paddingTop: \"25%\",\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    color: \"white\",\n  },\n}));\n\nconst layout = {\n  dragmode: \"zoom\",\n  mapbox: {\n    style: \"open-street-map\",\n    center: { lat: 51.11, lon: 17.03 },\n    zoom: 11,\n  },\n  margin: { r: 0, t: 0, b: 0, l: 0 },\n  autoexpand: true,\n  autosize: true,\n  automargin: true,\n  showlegend: false,\n};\n\nconst Network = ({\n  showNodes = true,\n  showPaths = true,\n  nodeMetric = \"k\",\n  maxNumOfPaths = 50,\n  useTrend = false,\n  onUsageChange = () => {},\n}) => {\n  const classes = useStyles();\n  const [frames, setFrames] = useState([]);\n  const [frameId, setFrameId] = useState(0);\n  const [day, setDay] = useState(1);\n  const [month, setMonth] = useState({ num: 4, days: 30 });\n  const [{ nodes, paths }, isLoading, isError] = useFetchNodes();\n  const [\n    { data: monthData, isLoading: isMonthLoading },\n    doFetchMonth,\n  ] = useFetchData(`${month.num}-paths.json`, {});\n  const [\n    { data: monthMetricsData, isLoading: isMonthMetricsLoading },\n    doFetchMonthMetrics,\n  ] = useFetchData(`${month.num}-metrics.json`, {});\n  const [\n    { data: monthUsageData, isLoading: isMonthUsageLoading },\n    doFetchUsageMetrics,\n  ] = useFetchData(`${month.num}-usage.json`, {});\n  const { time, start, pause, reset, isRunning } = useTimer({\n    endTime: 1440 / 15,\n    initialTime: frameId,\n  });\n\n  useEffect(() => {\n    if (\n      monthData != null &&\n      monthData[\"1\"] != null &&\n      monthMetricsData != null &&\n      monthMetricsData[\"1\"] != null\n    ) {\n      setFrames(\n        Array(1440 / 15)\n          .fill(0)\n          .map((val, id) => [\n            ...(showNodes ? nodes.list : []).map(\n              fillNodesMetricData(\n                monthMetricsData[day][id * 15] || [],\n                nodeMetric,\n                useTrend,\n                monthMetricsData[day][id * 15 - 15] || [],\n                monthMetricsData[day][id * 15 - 30] || []\n              )\n            ),\n            ...(showPaths ? monthData[day][id * 15] || [] : [])\n              .map(fillPathsWithData(paths.obj, nodes.obj))\n              .slice(0, maxNumOfPaths),\n          ])\n      );\n    } else {\n      setFrames(\n        Array(1440 / 15)\n          .fill(0)\n          .map((val, id) => [...nodes.list])\n      );\n    }\n  }, [\n    isLoading,\n    isMonthLoading,\n    isMonthMetricsLoading,\n    day,\n    showNodes,\n    showPaths,\n    nodeMetric,\n    maxNumOfPaths,\n    useTrend,\n  ]);\n\n  useEffect(() => {\n    if (time === 1440 / 15 && day < month.days) {\n      setDay(day + 1);\n      start(1);\n    }\n\n    if (monthUsageData != null && monthUsageData[\"1\"] != null) {\n      const usageData = monthUsageData[day][time * 15];\n      onUsageChange({\n        rent: usageData ? usageData[0].bu : 0,\n        total: usageData ? usageData[0].bt : 0,\n        percentage: usageData ? Math.round(usageData[0].bp * 100) : 0,\n      });\n    }\n  }, [time, day, isMonthUsageLoading]);\n\n  const data = frames[time] || [];\n  const handleAnimationChange = (action) => {\n    switch (action) {\n      case \"play\":\n        start();\n        break;\n      case \"pause\":\n        pause();\n        break;\n      default:\n        console.log(action);\n        break;\n    }\n  };\n  const onMonthChange = (month) => {\n    setFrameId(0);\n    reset(0);\n    setMonth({ num: month.num, days: month.days });\n    setDay(1);\n    doFetchMonth(`${month.num}-paths.json`);\n    doFetchMonthMetrics(`${month.num}-metrics.json`);\n    doFetchUsageMetrics(`${month.num}-usage.json`);\n  };\n  const onHourChange = (hour) => {\n    setFrameId(hour);\n    reset(hour);\n  };\n  const onDayChange = (day) => {\n    setDay(day);\n    setFrameId(0);\n    reset(0);\n  };\n  return (\n    <React.Fragment>\n      <Navigation\n        onDayChange={onDayChange}\n        onHourChange={onHourChange}\n        onMonthChange={onMonthChange}\n        onAnimationChange={handleAnimationChange}\n        day={day}\n        time={time}\n      />\n      <Plot\n        data={data}\n        layout={layout}\n        useResizeHandler={true}\n        style={{ width: \"100%\", minHeight: \"calc(100vh - 220px)\" }}\n      />\n      {isLoading && (\n        <div className={classes.overlay}>\n          <CircularProgress color=\"secondary\" size={80} thickness={4} />\n          <h1>Network data is loading... Please wait :)</h1>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Network;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Layout from \"../Layout/Layout\";\nimport Network from \"../Network/Network\";\nimport {nodeMetrics} from \"../../helpers\";\nimport \"./App.css\";\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: \"absolute\",\n    height: \"calc(100% - 64px)\",\n    marginTop: \"64px\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(6),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  menuContainer: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  formElement: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst pathOptions = [\n  {\n    name: 20,\n    value: 20,\n  },\n  {\n    name: 50,\n    value: 50,\n  },\n  {\n    name: 80,\n    value: 80,\n  },\n  {\n    name: 100,\n    value: 100,\n  },\n  {\n    name: 150,\n    value: 150,\n  },\n  {\n    name: 300,\n    value: 300,\n  },\n]\n\nfunction App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [useTrend, setUseTrend] = React.useState(false);\n  const [showNodes, setShowNodes] = React.useState(true);\n  const [showPaths, setShowPaths] = React.useState(true);\n  const [nodeMetric, setNodeMetric] = React.useState(nodeMetrics[0].value);\n  const [numOfPaths, setNumOfPaths] = React.useState(50);\n  const [currentUsage, setCurrentUsage] = React.useState({ rent: 0, total: null, percentage: 0});\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleUseTrend = (event) => {\n    setUseTrend(event.target.checked);\n  };\n  const handleShowNodes = (event) => {\n    setShowNodes(event.target.checked);\n  };\n  const handleShowPaths = (event) => {\n    setShowPaths(event.target.checked);\n  };\n  const handleNodeMetric = (event) => {\n    setNodeMetric(event.target.value);\n  };\n  const handleNumOfPaths = (event) => {\n    setNumOfPaths(event.target.value);\n  };\n\n  return (\n    <Layout usage={currentUsage}>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper:\n            classes.drawerPaper + \" \" + (!open ? classes.drawerPaperClose : \"\"),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          {open && (\n            <IconButton onClick={handleDrawerClose}>&#x276E;</IconButton>\n          )}\n          {!open && (\n            <IconButton onClick={handleDrawerOpen}>&#x276F;</IconButton>\n          )}\n        </div>\n        <Divider />\n        {open && (\n          <Container className={classes.menuContainer}>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Display Option</FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={showNodes}\n                      onChange={handleShowNodes}\n                      name=\"nodes\"\n                    />\n                  }\n                  label=\"Show Nodes?\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={showPaths}\n                      onChange={handleShowPaths}\n                      name=\"paths\"\n                    />\n                  }\n                  label=\"Show Paths?\"\n                />\n              </FormGroup>\n            </FormControl>\n            <FormControl className={classes.formElement}>\n              <InputLabel id=\"nodeMetric-label\">Node Metric</InputLabel>\n              <Select\n                labelId=\"nodeMetric-label\"\n                id=\"nodeMetric\"\n                value={nodeMetric}\n                onChange={handleNodeMetric}\n              >\n                {nodeMetrics.map((metric) => (\n                  <MenuItem key={metric.value} value={metric.value}>\n                    {metric.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formElement}>\n              <InputLabel id=\"numOfNodes-label\">Max num. of paths</InputLabel>\n              <Select\n                labelId=\"numOfNodes-label\"\n                id=\"numOfNodes\"\n                value={numOfPaths}\n                onChange={handleNumOfPaths}\n              >\n                {pathOptions.map((numData) => (\n                  <MenuItem key={numData.value} value={numData.value}>\n                    {numData.name}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText>Be careful it might affect performance</FormHelperText>\n            </FormControl>\n            <FormControl className={classes.formElement}>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={useTrend}\n                      onChange={handleUseTrend}\n                      name=\"useTrend\"\n                    />\n                  }\n                  label=\"Calculate Trend?\"\n                />\n              </FormGroup>\n            </FormControl>\n          </Container>\n        )}\n      </Drawer>\n      <Network showNodes={showNodes} showPaths={showPaths} nodeMetric={nodeMetric} maxNumOfPaths={numOfPaths} useTrend={useTrend} onUsageChange={setCurrentUsage}/>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.559ba900.svg\";"],"sourceRoot":""}