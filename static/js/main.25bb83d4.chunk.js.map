{"version":3,"sources":["components/Layout/Layout.js","hooks/useFetchData.js","helpers.js","hooks/useFetchNodes.js","hooks/useTimer.js","components/Network/Network.js","components/App/App.js","serviceWorker.js","index.js","components/Layout/logo.svg"],"names":["Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","main","minHeight","logo","maxHeight","footer","position","bottom","width","backgroundColor","palette","background","paper","padding","Layout","children","classes","Fragment","CssBaseline","AppBar","Toolbar","src","alt","className","noWrap","gutterBottom","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useFetchData","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","didCancel","a","axios","result","fetchData","preprocessNodes","nodes","lat","map","row","lng","ids","names","lon","mode","marker","size","hoverinfo","text","scl","useFetchNodes","nodesData","isNodesLoading","isNodesError","pathsData","isPathsLoading","isPathsError","list","Object","values","obj","paths","useTimer","initialTime","interval","step","timerType","endTime","onTimeOver","time","setTime","isRunning","setIsRunning","isTimeOver","setIsTimeOver","reset","useCallback","newTime","start","pause","intervalId","setInterval","previousTime","clearInterval","overlay","top","left","height","paddingTop","display","flexDirection","alignItems","layout","dragmode","mapbox","style","center","margin","r","t","b","l","zoom","autosize","showlegend","updatemenus","buttons","method","args","label","name","direction","pad","showactive","x","xanchor","y","yanchor","active","font","sliders","len","currentvalue","visible","prefix","steps","Array","fill","val","id","Math","floor","Network","showNodes","showPaths","nodeMetric","maxNumOfPaths","frames","setFrames","frameId","setFrameId","day","setDay","num","days","month","setMonth","monthData","isMonthLoading","doFetchMonth","monthMetricsData","isMonthMetricsLoading","doFetchMonthMetrics","metrics","metricKey","usePrev","prevMetrics","prevMetricTwo","node","currMetric","find","metr","o","metricValue","max","ceil","log2","reduce","acc","arr","length","colorscale","cmin","cmax","opacity","fillNodesMetricData","pathData","path","line","fillPathsWithData","slice","i","onButtonClicked","menu","button","console","log","onSliderChange","slider","useResizeHandler","CircularProgress","thickness","toolbarIcon","justifyContent","mixins","toolbar","drawerPaper","marginTop","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","menuContainer","formElement","nodeMetrics","value","pathOptions","App","React","open","setOpen","setShowNodes","setShowPaths","setNodeMetric","numOfPaths","setNumOfPaths","Drawer","IconButton","onClick","Divider","Container","FormControl","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","checked","onChange","event","target","InputLabel","Select","labelId","metric","MenuItem","key","numData","FormHelperText","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"gYAQA,SAASA,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,mBACA,IAAIC,MAAOC,cACX,KAKP,IAAMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,IAE7BC,KAAM,CACJC,UAAW,sBAEbC,KAAM,CACJC,UAAW,GACXL,YAAaF,EAAMG,QAAQ,IAE7BK,OAAQ,CACNC,SAAU,QACVC,OAAQ,EACRC,MAAO,QACPC,gBAAiBZ,EAAMa,QAAQC,WAAWC,MAC1CC,QAAShB,EAAMG,QAAQ,EAAG,QAIf,SAASc,EAAT,GAA6B,IAAZC,EAAW,EAAXA,SACxBC,EAAUrB,IAEhB,OACE,kBAAC,IAAMsB,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQb,SAAS,YACf,kBAACc,EAAA,EAAD,KACE,yBAAKC,IAAKlB,IAAMmB,IAAI,WAAWC,UAAWP,EAAQb,OAClD,kBAACd,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,UAAUiC,QAAM,GAA/C,iBAKJ,0BAAMD,UAAWP,EAAQf,MACrBc,GAGJ,4BAAQQ,UAAWP,EAAQX,QACzB,kBAAChB,EAAA,EAAD,CAAYC,QAAQ,KAAKE,MAAM,SAASiC,cAAY,GAApD,UAGA,kBAACrC,EAAD,Q,gFCzDFsC,EAAmB,SAACC,EAAOC,GAC/B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEG,WAAW,EACXC,SAAS,IAEb,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEG,WAAW,EACXC,SAAS,EACTC,KAAMJ,EAAOK,UAEjB,IAAK,gBACH,OAAO,2BACFN,GADL,IAEEG,WAAW,EACXC,SAAS,IAEb,QACE,MAAM,IAAIG,QA0CDC,EAtCM,SAACC,EAAYC,GAAiB,IAAD,EAC1BC,mBAASF,GADiB,mBACzCG,EADyC,KACpCC,EADoC,OAGtBC,qBAAWf,EAAkB,CACrDI,WAAW,EACXC,SAAS,EACTC,KAAMK,IANwC,mBAGzCV,EAHyC,KAGlCe,EAHkC,KAmChD,OA1BAC,qBAAU,WACR,IAAIC,GAAY,EAoBhB,OAlBe,uCAAG,4BAAAC,EAAA,6DAChBH,EAAS,CAAEb,KAAM,eADD,kBAIOiB,IAAMP,GAJb,OAIRQ,EAJQ,OAMTH,GACHF,EAAS,CAAEb,KAAM,gBAAiBI,QAASc,EAAOf,OAPtC,gDAUTY,GACHF,EAAS,CAAEb,KAAM,kBAXL,yDAAH,oDAgBfmB,GAEO,WACLJ,GAAY,KAEb,CAACL,IAEG,CAACZ,EAAOa,ICpDJS,EAAkB,WAAiB,IAAhBC,EAAe,uDAAP,GAChCC,EAAMD,EAAME,KAAI,SAACC,GAAD,OAASA,EAAG,OAC5BC,EAAMJ,EAAME,KAAI,SAACC,GAAD,OAASA,EAAG,OAC5BE,EAAML,EAAME,KAAI,SAACC,GAAD,OAASA,EAAG,MAC5BG,EAAQN,EAAME,KAAI,SAACC,GAAD,OAASA,EAAG,QACpC,MAAO,CACL,CACExB,KAAM,gBACNsB,IAAKA,EACLM,IAAKH,EACLC,IAAKA,EACLG,KAAM,UACNC,OAAQ,CACNC,KAAM,GACNrE,MAAO,QAETsE,UAAW,OACXC,KAAMN,KA6CNO,EAAM,CAAC,CAAC,EAAG,kBAAkB,CAAC,IAAK,mBAAmB,CAAC,KAAM,oBAAoB,CAAC,GAAI,qBAAqB,CAAC,KAAM,oBAAoB,CAAC,IAAK,oBAAoB,CAAC,KAAM,oBAAoB,CAAC,EAAE,mBC5CrLC,EAzBO,WAAO,IAAD,EAItB7B,EAAa,kBAAmB,IAJV,0BAEhB8B,EAFgB,EAEtBjC,KAA4BkC,EAFN,EAELpC,UAAoCqC,EAF/B,EAEsBpC,QAFtB,QAQtBI,EAAa,yBAA0B,KARjB,0BAMhBiC,EANgB,EAMtBpC,KAA4BqC,EANN,EAMLvC,UAAoCwC,EAN/B,EAMsBvC,QANtB,KAU1B,MAAO,CACL,CACEmB,MAAO,CACLqB,KAAMtB,EAAgBuB,OAAOC,OAAOR,IACpCS,IAAKT,GAEPU,MAAO,CACLD,IAAKN,IAGTF,GAAkBG,EAClBF,GAAgBG,IC6CLM,EArEE,SAAC,GAOX,IAAD,IANJC,mBAMI,MANU,EAMV,MALJC,gBAKI,MALO,IAKP,MAJJC,YAII,MAJG,EAIH,MAHJC,iBAGI,MAHQ,cAGR,EAFJC,EAEI,EAFJA,QACAC,EACI,EADJA,WACI,EACoB5C,mBAASuC,GAD7B,mBACGM,EADH,KACSC,EADT,OAE8B9C,oBAAS,GAFvC,mBAEG+C,EAFH,KAEcC,EAFd,OAGgChD,oBAAS,GAHzC,mBAGGiD,EAHH,KAGeC,EAHf,KAKEC,EAAQC,uBAAY,SAACC,GACzBL,GAAa,GACbE,GAAc,GACdJ,EAAQO,GAAoBd,KAC3B,CAACA,IAEEe,EAAQF,uBAAY,SAACP,GACrBI,GACFE,IAEEN,GACFM,EAAMN,GAGRG,GAAa,KACZ,CAACG,EAAOF,IAELM,EAAQH,uBAAY,WACxBJ,GAAa,KACZ,IAmCH,OAjCA3C,qBAAU,WACJ0C,GAAaF,IAASF,IACxBK,GAAa,GACbE,GAAc,GAEY,oBAAfN,GACTA,OAGH,CAACD,EAASC,EAAYC,EAAME,IAE/B1C,qBAAU,WACR,IAAImD,EAAa,KAcjB,OAZIT,EACFS,EAAaC,aAAY,WACvBX,GAAQ,SAACY,GAAD,MACQ,gBAAdhB,EACIgB,EAAejB,EACfiB,EAAejB,OAEpBD,GACMgB,GACTG,cAAcH,GAGT,WACDA,GACFG,cAAcH,MAGjB,CAACT,EAAWN,EAAMC,EAAWF,IAEzB,CAAEO,YAAWQ,QAAOJ,QAAOG,QAAOT,SCtDrCxF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqG,QAAS,CACP5F,SAAU,QACV6F,IAAK,EACLC,KAAM,EACN5F,MAAO,QACP6F,OAAQ,QACRC,WAAY,MACZ7F,gBAAiB,kBACjB8F,QAAS,OACTC,cAAe,SACfC,WAAY,SACZlH,MAAO,aAILmH,EAAS,CACbC,SAAU,OACVC,OAAQ,CACNC,MAAO,kBACPC,OAAQ,CAAE3D,IAAK,MAAOM,IAAK,OAC3BsD,OAAQ,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC/BC,KAAM,IAERC,UAAU,EACVC,YAAY,EACZC,YAAa,CACX,CACEC,QAAS,CACP,CACEC,OAAQ,SACRC,KAAM,CAAC,QACPC,MAAO,QAET,CACEF,OAAQ,SACRC,KAAM,CAAC,SACPC,MAAO,UAGXC,KAAM,SACNC,UAAW,OACXC,IAAK,CAAEb,EAAG,IACVc,YAAY,EACZlG,KAAM,UACNmG,EAAG,EACHC,QAAS,OACTC,EAAG,IACHC,QAAS,OAEX,CACEX,QAAS,CACP,CACEE,KAAM,CAAC,EAAG,IACVC,MAAO,QACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,EAAG,IACVC,MAAO,QACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,EAAG,IACVC,MAAO,MACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,EAAG,IACVC,MAAO,OACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,EAAG,IACVC,MAAO,OACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,EAAG,IACVC,MAAO,SACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,EAAG,IACVC,MAAO,YACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,GAAI,IACXC,MAAO,UACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,GAAI,IACXC,MAAO,WACPF,OAAQ,UAEV,CACEC,KAAM,CAAC,GAAI,IACXC,MAAO,WACPF,OAAQ,WAGZG,KAAM,QACNC,UAAW,OACXC,IAAK,CAAEb,EAAG,IACVc,YAAY,EACZlG,KAAM,WACNmG,EAAG,EACHC,QAAS,OACTC,EAAG,KACHC,QAAS,MACTC,OAAQ,EACRC,KAAM,CAAE9I,MAAO,aAGnB+I,QAAS,CACP,CACER,IAAK,CAAEb,EAAG,EAAGC,EAAG,IAChBc,EAAG,IACHE,EAAG,KACHK,IAAK,IACLC,aAAc,CACZC,SAAS,EACTR,QAAS,QACTS,OAAQ,SACRL,KAAM,CACJ9I,MAAO,OACPqE,KAAM,KAGVwE,OAAQ,EACRR,KAAM,OACNe,MAAOC,MAAM,IACVC,KAAK,GACLzF,KAAI,SAAC0F,EAAKC,GAAN,MAAc,CACjBpB,MAAM,GAAD,OAAKqB,KAAKC,MAAY,GAALF,EAAW,IAA5B,YACG,GAALA,EAAW,KAAO,EAAI,KAAa,GAALA,EAAW,IAE5CrB,KAAM,CAACqB,GACPtB,OAAQ,gBAwJHyB,EAlJC,SAAC,GAAkF,IAAD,IAA/EC,iBAA+E,aAA7DC,iBAA6D,aAA3CC,kBAA2C,MAA9B,IAA8B,MAAzBC,qBAAyB,MAAT,GAAS,EAC1FtI,EAAUrB,IADgF,EAEpE2C,mBAAS,IAF2D,mBAEzFiH,EAFyF,KAEjFC,EAFiF,OAGlElH,mBAAS,GAHyD,mBAGzFmH,EAHyF,KAGhFC,EAHgF,OAI1EpH,mBAAS,GAJiE,mBAIzFqH,EAJyF,KAIpFC,EAJoF,OAKtEtH,mBAAS,CAAEuH,IAAK,EAAGC,KAAM,KAL6C,mBAKzFC,EALyF,KAKlFC,EALkF,OAMjDhG,IANiD,0BAMvFd,EANuF,EAMvFA,MAAOyB,EANgF,EAMhFA,MAAS7C,EANuE,aAU5FK,EAAa,GAAD,OAAI4H,EAAMF,IAAV,eAA4B,KAVoD,0BAQtFI,EARsF,EAQ5FjI,KAA4BkI,EARgE,EAQ3EpI,UACnBqI,EAT8F,OAc5FhI,EAAa,GAAD,OAAI4H,EAAMF,IAAV,iBAA8B,IAdkD,0BAYtFO,EAZsF,EAY5FpI,KAAmCqI,GAZyD,EAYpEvI,UAC1BwI,GAb8F,QAe/C1F,EAAS,CACxDK,QAAS,GACTJ,YAAa4E,IAFPtE,GAfwF,GAexFA,KAAMS,GAfkF,GAelFA,MAAOC,GAf2E,GAe3EA,MAAOJ,GAfoE,GAepEA,MAfoE,GAe7DJ,UAInCqB,EAAO4B,QAAQ,GAAGF,OAASjD,GAC3BuB,EAAO4B,QAAQ,GAAK,CAClBR,IAAK,CAAEb,EAAG,EAAGC,EAAG,IAChBc,EAAG,IACHE,EAAG,KACHK,IAAK,IACLC,aAAc,CACZC,SAAS,EACTR,QAAS,QACTS,OAAQ,QACRL,KAAM,CACJ9I,MAAO,OACPqE,KAAM,KAGVwE,OAAQuB,EAAM,EACd/B,KAAM,MACNe,MAAOC,MAAMmB,EAAMD,MAChBjB,KAAK,GACLzF,KAAI,SAAC0F,EAAKC,GAAN,MAAc,CACjBpB,MAAOoB,EAAK,EACZrB,KAAM,CAACqB,EAAK,GACZtB,OAAQ,cAId9E,qBAAU,WAEO,MAAbsH,GACkB,MAAlBA,EAAU,IACU,MAApBG,GACyB,MAAzBA,EAAiB,GAEjBZ,EACEZ,MAAM,IACHC,KAAK,GACLzF,KAAI,SAAC0F,EAAKC,GAAN,6BACCI,EAAYjG,EAAMqB,KAAO,IAAInB,IH5IV,WAAiF,IAAhFmH,EAA+E,uDAArE,GAAIC,EAAiE,uDAArD,IAAKC,EAAgD,wDAA/BC,EAA+B,uCAAlBC,EAAkB,uCACjH,OAAO,WAAgB,IAAfC,EAAc,uDAAP,GACb,MAAO,CACL/I,KAAM,gBACNsB,IAAKyH,EAAKzH,IACVM,IAAKmH,EAAKnH,IACVF,IAAKqH,EAAKrH,IACVG,KAAM,UACNC,OAAQ,CACNC,KAAMgH,EAAKrH,IAAIH,KAAI,SAAA2F,GACjB,IAAM8B,EAAaN,EAAQO,MAAK,SAAAC,GAAI,OAAIA,EAAKC,IAAMjC,KACnD,GAAiB,MAAd8B,EACD,OAAO,EAET,IAAMI,EAA4B,MAAdT,EAAoBxB,KAAKkC,KAAK,GAAkD,EAA5ClC,KAAKmC,KAAKnC,KAAKoC,KAAKP,EAAWL,MAAgB,EAAG,GAAKK,EAAWL,GAC1H,OAAyC,EAAlCxB,KAAKmC,KAAKnC,KAAKoC,KAAKH,OAE7B1L,MAAOqL,EAAKrH,IAAIH,KAAI,SAAA2F,GAClB,IAAM8B,EAAaN,EAAQO,MAAK,SAAAC,GAAI,OAAIA,EAAKC,IAAMjC,KACnD,GAAiB,MAAd8B,EACD,MAAO,OAET,IAAMI,EAA4B,MAAdT,EAAoBxB,KAAKkC,KAAK,GAAkD,EAA5ClC,KAAKmC,KAAKnC,KAAKoC,KAAKP,EAAWL,MAAgB,EAAG,GAAKK,EAAWL,GAC1H,OAAGC,EAY0B,GATf,CAACI,EAFAH,EAAYI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,IAAMjC,MAAO8B,EAC1CF,EAAcG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,IAAMjC,MAAO8B,GACrBQ,QAAO,SAACC,EAAKxC,EAAKC,EAAIwC,GAM1D,OAJED,GADe,MAAdd,EACMxB,KAAKkC,KAAK,GAAqC,EAA/BlC,KAAKmC,KAAKnC,KAAKoC,KAAKtC,EAAG,KAAW,EAAG,GAAGyC,EAAIC,OAE5D1C,EAAI0B,GAAWe,EAAIC,SAG3B,GAEWP,GAAiB,EAE1BA,KAETQ,WAAY1H,EACZ2H,KAAM,EACNC,KAAM,GACNC,QAAS,IAEX/H,UAAW,OACXC,KAAM8G,EAAK9G,OGgGH+H,CACEzB,EAAiBT,GAAU,GAALZ,IAAY,GACnB,UAAfM,EAAyB,IAAMA,EAChB,UAAfA,EACAe,EAAiBT,GAAU,GAALZ,EAAU,KAAO,GACvCqB,EAAiBT,GAAU,GAALZ,EAAU,KAAO,MAPxC,aAUCK,GAAYa,EAAUN,GAAU,GAALZ,IAAiB,IAC7C3F,IHvKkB,WAA6B,IAA5BuB,EAA2B,uDAAnB,GAAIzB,EAAe,uDAAP,GACpD,OAAO,WAAoB,IAAnB4I,EAAkB,uDAAP,GACXC,EAAOpH,EAAM,GAAD,OAAImH,EAAQ,EAAZ,YAAqBA,EAAQ,IAC/C,MAAO,CACLjK,KAAM,gBACNsB,IAAa,MAAR4I,EAAe,GAAKA,EAAKzI,IAC9BG,IAAa,MAARsI,EAAe,GAAKA,EAAK5I,IAC9BO,KAAM,QACNsI,KAAM,CAAExL,MAAqB,EAAdsL,EAAQ,EAASvM,MAAO,qBACvCwJ,GAAY,MAARgD,EAAe,GAAKA,EAAKhD,GAC7BjF,KAAc,MAARiI,EAAe,UAAf,WAA+B7I,EAAM4I,EAAQ,GAAOlE,KAApD,iBAAiE1E,EAAM4I,EAAQ,GAAOlE,KAAtF,qBAAuGkE,EAAQ,KG6JxGG,CAAkBtH,EAAMD,IAAKxB,EAAMwB,MACvCwH,MAAM,EAAG5C,SAIlBE,EACEZ,MAAM,IACHC,KAAK,GACLzF,KAAI,SAAC0F,EAAKC,GAAN,mBAAiB7F,EAAMqB,YAGjC,CAACzC,EAAWoI,EAAgBG,GAAuBV,EAAKR,EAAWC,EAAWC,EAAYC,IAE7F3G,qBAAU,WACK,KAATwC,IAAsBwE,EAAMI,EAAMD,OACpCpD,EAAO4B,QAAQ,GAAGF,OAAS,EAC3BwB,EAAOD,EAAM,GACb/D,GAAM,MAEP,CAACT,GAAMwE,IAEV,IAAM3H,GAAOuH,EAAOpE,KAAS,GAkC7B,OACE,kBAAC,IAAMlE,SAAP,KACE,kBAAC,IAAD,CACEe,KAAMA,GACN0E,OAAQA,EACR6C,OAAQX,MAAMW,EAAOiC,QAClB3C,KAAK,GACLzF,KAAI,SAAC+I,EAAGpD,GAAJ,MAAY,CACfnB,KAAMmB,MAEVqD,gBA3Cc,SAAC,GAA0C,IAAhCxE,EAA+B,EAAvCyE,KAAQzE,KAAkBF,EAAa,EAAvB4E,OAAU5E,KAC/C,GAAa,UAATE,EACF8B,EAAW,GACXjE,GAAM,GACNuE,EAAS,CAAEH,IAAKnC,EAAK,GAAIoC,KAAMpC,EAAK,KACpCkC,EAAO,GACPO,EAAa,GAAD,OAAIzC,EAAK,GAAT,gBACZ4C,GAAoB,GAAD,OAAI5C,EAAK,GAAT,uBAEnB,OAAQA,EAAK,IACX,IAAK,OACH9B,KACA,MACF,IAAK,QACHC,KACA,MACF,QACE0G,QAAQC,IAAI9E,EAAK,MA2BnB+E,eAtBe,SAAC,GAA0C,IAA9B7E,EAA6B,EAAvC8E,OAAU9E,KAAgBF,EAAa,EAArB3C,KAAQ2C,KACnC,SAATE,IACF8B,EAAWhC,EAAK,IAChBjC,GAAMiC,EAAK,KAEA,QAATE,IACFgC,EAAOlC,EAAK,IACZgC,EAAW,GACXjE,GAAM,KAeJkH,kBAAkB,EAClB9F,MAAO,CAAErG,MAAO,OAAQN,UAAW,wBAEpC4B,GACC,yBAAKP,UAAWP,EAAQkF,SACtB,kBAAC0G,EAAA,EAAD,CAAkBrN,MAAM,YAAYqE,KAAM,GAAIiJ,UAAW,IACzD,4ECtRJlN,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiN,YAAY,aACVvG,QAAS,OACTE,WAAY,SACZsG,eAAgB,WAChBlM,QAAS,SACNhB,EAAMmN,OAAOC,SAElBC,YAAa,CACX5M,SAAU,WACV+F,OAAQ,oBACR8G,UAAW,OACXC,WAAY,SACZ5M,MAfgB,IAgBhB6M,WAAYxN,EAAMyN,YAAYC,OAAO,QAAS,CAC5CC,OAAQ3N,EAAMyN,YAAYE,OAAOC,MACjCC,SAAU7N,EAAMyN,YAAYI,SAASC,kBAGzCC,iBAAiB,aACfC,UAAW,SACXR,WAAYxN,EAAMyN,YAAYC,OAAO,QAAS,CAC5CC,OAAQ3N,EAAMyN,YAAYE,OAAOC,MACjCC,SAAU7N,EAAMyN,YAAYI,SAASI,gBAEvCtN,MAAOX,EAAMG,QAAQ,IACpBH,EAAMkO,YAAYC,GAAG,MAAQ,CAC5BxN,MAAOX,EAAMG,QAAQ,KAGzBiO,cAAe,CACb3H,WAAYzG,EAAMG,QAAQ,GAC1BuG,QAAS,OACTC,cAAe,UAEjB0H,YAAa,CACXf,UAAWtN,EAAMG,QAAQ,SAIvBmO,EAAc,CAClB,CACEvG,KAAM,SACNwG,MAAO,KAET,CACExG,KAAM,YACNwG,MAAO,MAET,CACExG,KAAM,aACNwG,MAAO,MAET,CACExG,KAAM,WACNwG,MAAO,KAET,CACExG,KAAM,eACNwG,MAAO,UAILC,EAAc,CAClB,CACEzG,KAAM,GACNwG,MAAO,IAET,CACExG,KAAM,GACNwG,MAAO,IAET,CACExG,KAAM,GACNwG,MAAO,IAET,CACExG,KAAM,IACNwG,MAAO,KAET,CACExG,KAAM,IACNwG,MAAO,KAET,CACExG,KAAM,IACNwG,MAAO,MAmHIE,OA/Gf,WACE,IAAMtN,EAAUrB,IADH,EAEW4O,IAAMjM,UAAS,GAF1B,mBAENkM,EAFM,KAEAC,EAFA,OAGqBF,IAAMjM,UAAS,GAHpC,mBAGN6G,EAHM,KAGKuF,EAHL,OAIqBH,IAAMjM,UAAS,GAJpC,mBAIN8G,EAJM,KAIKuF,EAJL,OAKuBJ,IAAMjM,SAAS6L,EAAY,GAAGC,OALrD,mBAKN/E,EALM,KAKMuF,EALN,OAMuBL,IAAMjM,SAAS,IANtC,mBAMNuM,EANM,KAMMC,EANN,KA0Bb,OACE,kBAAChO,EAAD,KACE,kBAACiO,EAAA,EAAD,CACEzP,QAAQ,YACR0B,QAAS,CACPJ,MACEI,EAAQkM,YAAc,KAAQsB,EAAkC,GAA3BxN,EAAQ4M,mBAEjDY,KAAMA,GAEN,yBAAKjN,UAAWP,EAAQ8L,aACrB0B,GACC,kBAACQ,EAAA,EAAD,CAAYC,QA5BI,WACxBR,GAAQ,KA2BA,WAEAD,GACA,kBAACQ,EAAA,EAAD,CAAYC,QAlCG,WACvBR,GAAQ,KAiCA,WAGJ,kBAACS,EAAA,EAAD,MACCV,GACC,kBAACW,EAAA,EAAD,CAAW5N,UAAWP,EAAQiN,eAC5B,kBAACmB,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,kBACA,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,QAASxG,EACTyG,SAzCI,SAACC,GACvBnB,EAAamB,EAAMC,OAAOH,UAyCR/H,KAAK,UAGTD,MAAM,gBAER,kBAAC6H,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACEC,QAASvG,EACTwG,SAhDI,SAACC,GACvBlB,EAAakB,EAAMC,OAAOH,UAgDR/H,KAAK,UAGTD,MAAM,kBAIZ,kBAACyH,EAAA,EAAD,CAAa7N,UAAWP,EAAQkN,aAC9B,kBAAC6B,EAAA,EAAD,CAAYhH,GAAG,oBAAf,eACA,kBAACiH,EAAA,EAAD,CACEC,QAAQ,mBACRlH,GAAG,aACHqF,MAAO/E,EACPuG,SA3DW,SAACC,GACxBjB,EAAciB,EAAMC,OAAO1B,SA4DdD,EAAY/K,KAAI,SAAC8M,GAAD,OACf,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAO9B,MAAOA,MAAO8B,EAAO9B,OACxC8B,EAAOtI,WAKhB,kBAACwH,EAAA,EAAD,CAAa7N,UAAWP,EAAQkN,aAC9B,kBAAC6B,EAAA,EAAD,CAAYhH,GAAG,oBAAf,qBACA,kBAACiH,EAAA,EAAD,CACEC,QAAQ,mBACRlH,GAAG,aACHqF,MAAOS,EACPe,SAvEW,SAACC,GACxBf,EAAce,EAAMC,OAAO1B,SAwEdC,EAAYjL,KAAI,SAACiN,GAAD,OACf,kBAACF,EAAA,EAAD,CAAUC,IAAKC,EAAQjC,MAAOA,MAAOiC,EAAQjC,OAC1CiC,EAAQzI,UAIf,kBAAC0I,EAAA,EAAD,kDAKR,kBAAC,EAAD,CAASnH,UAAWA,EAAWC,UAAWA,EAAWC,WAAYA,EAAYC,cAAeuF,MC7M9E0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjF,QAAQiF,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.25bb83d4.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport logo from './logo.svg'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  main: {\n    minHeight: 'calc(100vh - 70px)',\n  },\n  logo: {\n    maxHeight: 32,\n    marginRight: theme.spacing(2)\n  },\n  footer: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100vw',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2),\n  },\n}));\n\nexport default function Layout({children}) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <img src={logo} alt=\"WRM Logo\" className={classes.logo}/>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            WRM Network\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.main}>\n        { children }\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useFetchData = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_INIT\" });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_FAILURE\" });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl];\n};\n\nexport default useFetchData;\n","export const preprocessPaths = (paths = {}) => {\n  return paths.map((row) => ({\n    type: \"scattermapbox\",\n    lat: row.lng,\n    lon: row.lat,\n    mode: \"lines\",\n    line: { width: 4, color: \"red\" },\n    id: row.id,\n    text: `Connection between ${row.id}`,\n  }));\n};\n\nexport const preprocessNodes = (nodes = {}) => {\n  const lat = nodes.map((row) => row[\"lat\"]);\n  const lng = nodes.map((row) => row[\"lng\"]);\n  const ids = nodes.map((row) => row[\"id\"]);\n  const names = nodes.map((row) => row[\"name\"]);\n  return [\n    {\n      type: \"scattermapbox\",\n      lat: lat,\n      lon: lng,\n      ids: ids,\n      mode: \"markers\",\n      marker: {\n        size: 14,\n        color: \"blue\",\n      },\n      hoverinfo: \"text\",\n      text: names,\n    },\n  ];\n};\n\nexport const generateRandomFile = () => {\n  return Array(31)\n    .fill(1)\n    .reduce((acc, value, index) => {\n      acc[index + 1] = Array(1440 / 15)\n        .fill(0)\n        .reduce((dayAcc, dayVal, dayId) => {\n          dayAcc[dayId * 15] = Array(Math.floor(Math.random() * 15) + 1)\n            .fill(1)\n            .map((el, index) => {\n              const org = Math.floor(Math.random() * 202)\n              const dest = Math.floor(Math.random() * 204)\n              return {\n                o: org,\n                d: org === dest ? dest + 1 : dest,\n                c: Math.floor(Math.random() * 30) + 1,\n              }\n            });\n          dayAcc[dayId * 15].sort((a, b) => b.c - a.c)\n          return dayAcc;\n        }, {});\n      return acc;\n    }, {});\n};\n\nexport const fillPathsWithData = (paths = {}, nodes = {}) => {\n  return (pathData = {}) => {\n    const path = paths[`${pathData[\"o\"]}-${pathData[\"d\"]}`];\n    return {\n      type: \"scattermapbox\",\n      lat: path == null ? [] : path.lng,\n      lon: path == null ? [] : path.lat,\n      mode: \"lines\",\n      line: { width: pathData[\"c\"]*2, color: \"rgba(255,0,0,0.5)\" },\n      id: path == null ? [] : path.id,\n      text: path == null ? 'unknown' : `\"${nodes[pathData[\"o\"]].name}\" do \"${nodes[pathData[\"d\"]].name}\" rowery: ${pathData[\"c\"]}`,\n    };\n  };\n};\n\nconst scl = [[0, 'rgb(0, 0, 200)'],[0.25,'rgb(0, 25, 255)'],[0.375,'rgb(0, 152, 255)'],[0.5,'rgb(44, 255, 150)'],[0.625,'rgb(151, 255, 0)'],[0.75,'rgb(255, 234, 0)'],[0.875,'rgb(255, 111, 0)'],[1,'rgb(255, 0, 0)']];\n\nexport const fillNodesMetricData = (metrics = {}, metricKey = 'k', usePrev = false, prevMetrics, prevMetricTwo) => {\n  return (node = {}) => {\n    return {\n      type: \"scattermapbox\",\n      lat: node.lat,\n      lon: node.lon,\n      ids: node.ids,\n      mode: \"markers\",\n      marker: {\n        size: node.ids.map(id => {\n          const currMetric = metrics.find(metr => metr.o === id)\n          if(currMetric == null) {\n            return 4;\n          }\n          const metricValue = metricKey === 'p' ? Math.max((7*8 + Math.ceil(Math.log2(currMetric[metricKey]))*7)/3, 1) : currMetric[metricKey];\n          return Math.ceil(Math.log2(metricValue))*8\n        }),\n        color: node.ids.map(id => {\n          const currMetric = metrics.find(metr => metr.o === id)\n          if(currMetric == null) {\n            return 'blue';\n          }\n          const metricValue = metricKey === 'p' ? Math.max((9*8 + Math.ceil(Math.log2(currMetric[metricKey]))*9)/3, 0) : currMetric[metricKey];\n          if(usePrev) {\n            const prev = prevMetrics.find(metr => metr.o === id) || currMetric\n            const prev2 = prevMetricTwo.find(metr => metr.o === id) || currMetric\n            const avg = [currMetric, prev, prev2].reduce((acc, val, id, arr) => {\n              if(metricKey === 'p') {\n                acc += Math.max((9*8 + Math.ceil(Math.log2(val['p']))*9)/3, 0)/arr.length\n              } else {\n                acc += val[metricKey]/arr.length\n              }\n              return acc\n            }, 0)\n\n            return (avg - metricValue)*2 + 5\n          }\n          return metricValue\n        }),\n        colorscale: scl,\n        cmin: 0,\n        cmax: 15,\n        opacity: 0.8,\n      },\n      hoverinfo: \"text\",\n      text: node.text,\n    };\n  };\n};\n","import React from \"react\";\nimport useFetchData from \"./useFetchData\";\n\nimport {preprocessNodes} from \"../helpers\";\n\nconst useFetchNodes = () => {\n  const [\n    { data: nodesData, isLoading: isNodesLoading, isError: isNodesError },\n    doFetchNodes,\n  ] = useFetchData(\"nodes_list.json\", {});\n  const [\n    { data: pathsData, isLoading: isPathsLoading, isError: isPathsError },\n    doFetchPaths,\n  ] = useFetchData(\"paths_reduced-e10.json\", {});\n\n  return [\n    {\n      nodes: {\n        list: preprocessNodes(Object.values(nodesData)),\n        obj: nodesData\n      },\n      paths: {\n        obj: pathsData\n      },\n    },\n    isNodesLoading || isPathsLoading,\n    isNodesError || isPathsError,\n  ];\n};\n\nexport default useFetchNodes;\n","import { useCallback, useEffect, useState } from \"react\";\n\nconst useTimer = ({\n  initialTime = 0,\n  interval = 2000,\n  step = 1,\n  timerType = \"INCREMENTAL\",\n  endTime,\n  onTimeOver,\n}) => {\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isTimeOver, setIsTimeOver] = useState(false);\n\n  const reset = useCallback((newTime) => {\n    setIsRunning(false);\n    setIsTimeOver(false);\n    setTime(newTime ? newTime : initialTime);\n  }, [initialTime]);\n\n  const start = useCallback((time) => {\n    if (isTimeOver) {\n      reset();\n    }\n    if (time) {\n      reset(time)\n    }\n\n    setIsRunning(true);\n  }, [reset, isTimeOver]);\n\n  const pause = useCallback(() => {\n    setIsRunning(false);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && time === endTime) {\n      setIsRunning(false);\n      setIsTimeOver(true);\n\n      if (typeof onTimeOver === \"function\") {\n        onTimeOver();\n      }\n    }\n  }, [endTime, onTimeOver, time, isRunning]);\n\n  useEffect(() => {\n    let intervalId = null;\n\n    if (isRunning) {\n      intervalId = setInterval(() => {\n        setTime((previousTime) =>\n          timerType === \"DECREMENTAL\"\n            ? previousTime - step\n            : previousTime + step\n        );\n      }, interval);\n    } else if (intervalId) {\n      clearInterval(intervalId);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isRunning, step, timerType, interval]);\n\n  return { isRunning, pause, reset, start, time };\n};\n\nexport default useTimer","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Plot from \"react-plotly.js\";\nimport spacetime from \"spacetime\";\nimport useFetchNodes from \"../../hooks/useFetchNodes\";\nimport useTimer from \"../../hooks/useTimer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useFetchData from \"../../hooks/useFetchData\";\nimport {\n  generateRandomFile,\n  fillPathsWithData,\n  fillNodesMetricData,\n} from \"../../helpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vw\",\n    paddingTop: \"25%\",\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    color: \"white\",\n  },\n}));\n\nconst layout = {\n  dragmode: \"zoom\",\n  mapbox: {\n    style: \"open-street-map\",\n    center: { lat: 51.11, lon: 17.03 },\n    margin: { r: 0, t: 0, b: 0, l: 0 },\n    zoom: 11,\n  },\n  autosize: true,\n  showlegend: false,\n  updatemenus: [\n    {\n      buttons: [\n        {\n          method: \"update\",\n          args: [\"play\"],\n          label: \"Play\",\n        },\n        {\n          method: \"update\",\n          args: [\"pause\"],\n          label: \"Pause\",\n        },\n      ],\n      name: \"action\",\n      direction: \"left\",\n      pad: { t: 10 },\n      showactive: true,\n      type: \"buttons\",\n      x: 0.0,\n      xanchor: \"left\",\n      y: 1.1,\n      yanchor: \"top\",\n    },\n    {\n      buttons: [\n        {\n          args: [3, 31],\n          label: \"March\",\n          method: \"update\",\n        },\n        {\n          args: [4, 30],\n          label: \"April\",\n          method: \"update\",\n        },\n        {\n          args: [5, 31],\n          label: \"May\",\n          method: \"update\",\n        },\n        {\n          args: [6, 30],\n          label: \"June\",\n          method: \"update\",\n        },\n        {\n          args: [7, 31],\n          label: \"July\",\n          method: \"update\",\n        },\n        {\n          args: [8, 31],\n          label: \"August\",\n          method: \"update\",\n        },\n        {\n          args: [9, 30],\n          label: \"September\",\n          method: \"update\",\n        },\n        {\n          args: [10, 31],\n          label: \"October\",\n          method: \"update\",\n        },\n        {\n          args: [11, 30],\n          label: \"November\",\n          method: \"update\",\n        },\n        {\n          args: [12, 31],\n          label: \"December\",\n          method: \"update\",\n        },\n      ],\n      name: \"month\",\n      direction: \"down\",\n      pad: { t: 10 },\n      showactive: true,\n      type: \"dropdown\",\n      x: 0.0,\n      xanchor: \"left\",\n      y: 1.15,\n      yanchor: \"top\",\n      active: 1,\n      font: { color: \"#5072a8\" },\n    },\n  ],\n  sliders: [\n    {\n      pad: { t: 5, b: 10 },\n      x: 0.15,\n      y: 1.11,\n      len: 0.85,\n      currentvalue: {\n        visible: true,\n        xanchor: \"right\",\n        prefix: \"Hour: \",\n        font: {\n          color: \"#888\",\n          size: 20,\n        },\n      },\n      active: 0,\n      name: \"Hour\",\n      steps: Array(1440 / 15)\n        .fill(0)\n        .map((val, id) => ({\n          label: `${Math.floor((id * 15) / 60)}:${\n            (id * 15) % 60 === 0 ? \"00\" : (id * 15) % 60\n          }`,\n          args: [id],\n          method: \"update\",\n        })),\n    },\n  ],\n};\n\nconst Network = ({ showNodes = true, showPaths = true, nodeMetric = 'k', maxNumOfPaths = 50 }) => {\n  const classes = useStyles();\n  const [frames, setFrames] = useState([]);\n  const [frameId, setFrameId] = useState(0);\n  const [day, setDay] = useState(1);\n  const [month, setMonth] = useState({ num: 4, days: 30 });\n  const [{ nodes, paths }, isLoading, isError] = useFetchNodes();\n  const [\n    { data: monthData, isLoading: isMonthLoading },\n    doFetchMonth,\n  ] = useFetchData(`${month.num}-paths.json`, {});\n  const [\n    { data: monthMetricsData, isLoading: isMonthMetricsLoading },\n    doFetchMonthMetrics,\n  ] = useFetchData(`${month.num}-metrics.json`, {});\n  const { time, start, pause, reset, isRunning } = useTimer({\n    endTime: 1440 / 15,\n    initialTime: frameId,\n  });\n  layout.sliders[0].active = time;\n  layout.sliders[1] = {\n    pad: { t: 5, b: 10 },\n    x: 0.15,\n    y: 1.22,\n    len: 0.85,\n    currentvalue: {\n      visible: true,\n      xanchor: \"right\",\n      prefix: \"Day: \",\n      font: {\n        color: \"#888\",\n        size: 12,\n      },\n    },\n    active: day - 1,\n    name: \"Day\",\n    steps: Array(month.days)\n      .fill(0)\n      .map((val, id) => ({\n        label: id + 1,\n        args: [id + 1],\n        method: \"update\",\n      })),\n  };\n\n  useEffect(() => {\n    if (\n      monthData != null &&\n      monthData[\"1\"] != null &&\n      monthMetricsData != null &&\n      monthMetricsData[\"1\"] != null\n    ) {\n      setFrames(\n        Array(1440 / 15)\n          .fill(0)\n          .map((val, id) => [\n            ...(showNodes ? nodes.list : []).map(\n              fillNodesMetricData(\n                monthMetricsData[day][id * 15] || [],\n                nodeMetric === 'trend' ? 'k' : nodeMetric,\n                nodeMetric === 'trend',\n                monthMetricsData[day][id * 15 - 15] || [],\n                monthMetricsData[day][id * 15 - 30] || []\n              )\n            ),\n            ...(showPaths ? monthData[day][id * 15] || [] : [])\n              .map(fillPathsWithData(paths.obj, nodes.obj))\n              .slice(0, maxNumOfPaths),\n          ])\n      );\n    } else {\n      setFrames(\n        Array(1440 / 15)\n          .fill(0)\n          .map((val, id) => [...nodes.list])\n      );\n    }\n  }, [isLoading, isMonthLoading, isMonthMetricsLoading, day, showNodes, showPaths, nodeMetric, maxNumOfPaths]);\n\n  useEffect(() => {\n    if (time === 1440 / 15 && day < month.days) {\n      layout.sliders[0].active = 1;\n      setDay(day + 1);\n      start(1);\n    }\n  }, [time, day]);\n\n  const data = frames[time] || [];\n  const buttonClick = ({ menu: { name }, button: { args } }) => {\n    if (name === \"month\") {\n      setFrameId(0);\n      reset(0);\n      setMonth({ num: args[0], days: args[1] });\n      setDay(1);\n      doFetchMonth(`${args[0]}-paths.json`);\n      doFetchMonthMetrics(`${args[0]}-metrics.json`);\n    } else {\n      switch (args[0]) {\n        case \"play\":\n          start();\n          break;\n        case \"pause\":\n          pause();\n          break;\n        default:\n          console.log(args[0]);\n          break;\n      }\n    }\n  };\n  const sliderChange = ({ slider: { name }, step: { args } }) => {\n    if (name === \"Hour\") {\n      setFrameId(args[0]);\n      reset(args[0]);\n    }\n    if (name === \"Day\") {\n      setDay(args[0]);\n      setFrameId(0);\n      reset(0);\n    }\n  };\n  return (\n    <React.Fragment>\n      <Plot\n        data={data}\n        layout={layout}\n        frames={Array(frames.length)\n          .fill(0)\n          .map((i, id) => ({\n            name: id,\n          }))}\n        onButtonClicked={buttonClick}\n        onSliderChange={sliderChange}\n        useResizeHandler={true}\n        style={{ width: \"100%\", minHeight: \"calc(100vh - 70px)\" }}\n      />\n      {isLoading && (\n        <div className={classes.overlay}>\n          <CircularProgress color=\"secondary\" size={80} thickness={4} />\n          <h1>Network data is loading... Please wait :)</h1>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Network;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Container from \"@material-ui/core/Container\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Layout from \"../Layout/Layout\";\nimport Network from \"../Network/Network\";\nimport \"./App.css\";\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: \"absolute\",\n    height: \"calc(100% - 64px)\",\n    marginTop: \"64px\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(6),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  menuContainer: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  formElement: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst nodeMetrics = [\n  {\n    name: \"Degree\",\n    value: \"k\",\n  },\n  {\n    name: \"In Degree\",\n    value: \"ik\",\n  },\n  {\n    name: \"Out Degree\",\n    value: \"ok\",\n  },\n  {\n    name: \"PageRank\",\n    value: \"p\",\n  },\n  {\n    name: \"Degree trend\",\n    value: \"trend\",\n  },\n];\n\nconst pathOptions = [\n  {\n    name: 20,\n    value: 20,\n  },\n  {\n    name: 50,\n    value: 50,\n  },\n  {\n    name: 80,\n    value: 80,\n  },\n  {\n    name: 100,\n    value: 100,\n  },\n  {\n    name: 150,\n    value: 150,\n  },\n  {\n    name: 300,\n    value: 300,\n  },\n]\n\nfunction App() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [showNodes, setShowNodes] = React.useState(true);\n  const [showPaths, setShowPaths] = React.useState(true);\n  const [nodeMetric, setNodeMetric] = React.useState(nodeMetrics[0].value);\n  const [numOfPaths, setNumOfPaths] = React.useState(50);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleShowNodes = (event) => {\n    setShowNodes(event.target.checked);\n  };\n  const handleShowPaths = (event) => {\n    setShowPaths(event.target.checked);\n  };\n  const handleNodeMetric = (event) => {\n    setNodeMetric(event.target.value);\n  };\n  const handleNumOfPaths = (event) => {\n    setNumOfPaths(event.target.value);\n  };\n\n  return (\n    <Layout>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper:\n            classes.drawerPaper + \" \" + (!open ? classes.drawerPaperClose : \"\"),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          {open && (\n            <IconButton onClick={handleDrawerClose}>&#x276E;</IconButton>\n          )}\n          {!open && (\n            <IconButton onClick={handleDrawerOpen}>&#x276F;</IconButton>\n          )}\n        </div>\n        <Divider />\n        {open && (\n          <Container className={classes.menuContainer}>\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Display Option</FormLabel>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={showNodes}\n                      onChange={handleShowNodes}\n                      name=\"nodes\"\n                    />\n                  }\n                  label=\"Show Nodes?\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={showPaths}\n                      onChange={handleShowPaths}\n                      name=\"paths\"\n                    />\n                  }\n                  label=\"Show Paths?\"\n                />\n              </FormGroup>\n            </FormControl>\n            <FormControl className={classes.formElement}>\n              <InputLabel id=\"nodeMetric-label\">Node Metric</InputLabel>\n              <Select\n                labelId=\"nodeMetric-label\"\n                id=\"nodeMetric\"\n                value={nodeMetric}\n                onChange={handleNodeMetric}\n              >\n                {nodeMetrics.map((metric) => (\n                  <MenuItem key={metric.value} value={metric.value}>\n                    {metric.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formElement}>\n              <InputLabel id=\"numOfNodes-label\">Max num. of paths</InputLabel>\n              <Select\n                labelId=\"numOfNodes-label\"\n                id=\"numOfNodes\"\n                value={numOfPaths}\n                onChange={handleNumOfPaths}\n              >\n                {pathOptions.map((numData) => (\n                  <MenuItem key={numData.value} value={numData.value}>\n                    {numData.name}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText>Be careful it might affect performance</FormHelperText>\n            </FormControl>\n          </Container>\n        )}\n      </Drawer>\n      <Network showNodes={showNodes} showPaths={showPaths} nodeMetric={nodeMetric} maxNumOfPaths={numOfPaths}/>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.559ba900.svg\";"],"sourceRoot":""}