{"version":3,"sources":["components/Layout/logo.svg","components/Layout/Layout.js","hooks/useFetchData.js","helpers.js","hooks/useFetchNodes.js","hooks/useTimer.js","components/Network/Network.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","main","minHeight","logo","maxHeight","footer","position","bottom","width","backgroundColor","palette","background","paper","padding","Layout","children","classes","Fragment","CssBaseline","AppBar","Toolbar","src","alt","className","noWrap","gutterBottom","dataFetchReducer","state","action","type","isLoading","isError","data","payload","Error","useFetchData","initialUrl","initialData","useState","url","setUrl","useReducer","dispatch","useEffect","didCancel","a","axios","result","fetchData","preprocessNodes","nodes","lat","map","row","lng","ids","names","lon","mode","marker","size","hoverinfo","text","useFetchNodes","nodesData","isNodesLoading","isNodesError","pathsData","isPathsLoading","isPathsError","list","Object","values","obj","paths","useTimer","initialTime","interval","step","timerType","endTime","onTimeOver","time","setTime","isRunning","setIsRunning","isTimeOver","setIsTimeOver","reset","useCallback","newTime","start","pause","intervalId","setInterval","previousTime","clearInterval","overlay","top","left","height","paddingTop","display","flexDirection","alignItems","layout","dragmode","mapbox","style","center","margin","r","t","b","l","zoom","autosize","showlegend","updatemenus","buttons","method","args","label","name","direction","pad","showactive","x","xanchor","y","yanchor","active","font","sliders","len","currentvalue","visible","prefix","steps","Array","fill","val","id","Math","floor","Network","frames","setFrames","frameId","setFrameId","day","setDay","num","days","month","setMonth","monthData","isMonthLoading","reduce","acc","value","index","dayAcc","dayVal","dayId","random","el","org","dest","o","d","c","sort","pathData","path","line","fillPathsWithData","slice","length","i","onButtonClicked","menu","button","console","log","onSliderChange","slider","useResizeHandler","CircularProgress","thickness","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1ecefed9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.559ba900.svg\";","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport logo from './logo.svg'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  main: {\n    minHeight: 'calc(100vh - 70px)',\n  },\n  logo: {\n    maxHeight: 32,\n    marginRight: theme.spacing(2)\n  },\n  footer: {\n    position: 'fixed',\n    bottom: 0,\n    width: '100vw',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2),\n  },\n}));\n\nexport default function Layout({children}) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <img src={logo} alt=\"WRM Logo\" className={classes.logo}/>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            WRM Network\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.main}>\n        { children }\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport axios from 'axios';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case \"FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useFetchData = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isError: false,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_INIT\" });\n\n      try {\n        const result = await axios(url);\n\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: \"FETCH_FAILURE\" });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl];\n};\n\nexport default useFetchData;\n","export const preprocessPaths = (paths = {}) => {\n  return paths.map((row) => ({\n    type: \"scattermapbox\",\n    lat: row.lng,\n    lon: row.lat,\n    mode: \"lines\",\n    line: { width: 4, color: \"red\" },\n    id: row.id,\n    text: `Connection between ${row.id}`,\n  }));\n};\n\nexport const preprocessNodes = (nodes = {}) => {\n  const lat = nodes.map((row) => row[\"lat\"]);\n  const lng = nodes.map((row) => row[\"lng\"]);\n  const ids = nodes.map((row) => row[\"id\"]);\n  const names = nodes.map((row) => row[\"name\"]);\n  return [\n    {\n      type: \"scattermapbox\",\n      lat: lat,\n      lon: lng,\n      ids: ids,\n      mode: \"markers\",\n      marker: {\n        size: 14,\n        color: \"blue\",\n      },\n      hoverinfo: \"text\",\n      text: names,\n    },\n  ];\n};\n\nexport const generateRandomFile = () => {\n  return Array(31)\n    .fill(1)\n    .reduce((acc, value, index) => {\n      acc[index + 1] = Array(1440 / 15)\n        .fill(0)\n        .reduce((dayAcc, dayVal, dayId) => {\n          dayAcc[dayId * 15] = Array(Math.floor(Math.random() * 15) + 1)\n            .fill(1)\n            .map((el, index) => {\n              const org = Math.floor(Math.random() * 202)\n              const dest = Math.floor(Math.random() * 204)\n              return {\n                o: org,\n                d: org === dest ? dest + 1 : dest,\n                c: Math.floor(Math.random() * 30) + 1,\n              }\n            });\n          dayAcc[dayId * 15].sort((a, b) => b.c - a.c)\n          return dayAcc;\n        }, {});\n      return acc;\n    }, {});\n};\n\nexport const fillPathsWithData = (paths = {}, nodes = {}) => {\n  return (pathData = {}) => {\n    const path = paths[`${pathData[\"o\"]}-${pathData[\"d\"]}`];\n    return {\n      type: \"scattermapbox\",\n      lat: path == null ? [] : path.lng,\n      lon: path == null ? [] : path.lat,\n      mode: \"lines\",\n      line: { width: pathData[\"c\"]*2, color: \"red\" },\n      id: path == null ? [] : path.id,\n      text: path == null ? 'unknown' : `\"${nodes[pathData[\"o\"]].name}\" do \"${nodes[pathData[\"d\"]].name}\" rowery: ${pathData[\"c\"]}`,\n    };\n  };\n};\n","import React from \"react\";\nimport useFetchData from \"./useFetchData\";\n\nimport {preprocessNodes} from \"../helpers\";\n\nconst useFetchNodes = () => {\n  const [\n    { data: nodesData, isLoading: isNodesLoading, isError: isNodesError },\n    doFetchNodes,\n  ] = useFetchData(\"nodes_list.json\", {});\n  const [\n    { data: pathsData, isLoading: isPathsLoading, isError: isPathsError },\n    doFetchPaths,\n  ] = useFetchData(\"paths_reduced-e10.json\", {});\n\n  return [\n    {\n      nodes: {\n        list: preprocessNodes(Object.values(nodesData)),\n        obj: nodesData\n      },\n      paths: {\n        obj: pathsData\n      },\n    },\n    isNodesLoading || isPathsLoading,\n    isNodesError || isPathsError,\n  ];\n};\n\nexport default useFetchNodes;\n","import { useCallback, useEffect, useState } from \"react\";\n\nconst useTimer = ({\n  initialTime = 0,\n  interval = 2000,\n  step = 1,\n  timerType = \"INCREMENTAL\",\n  endTime,\n  onTimeOver,\n}) => {\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isTimeOver, setIsTimeOver] = useState(false);\n\n  const reset = useCallback((newTime) => {\n    setIsRunning(false);\n    setIsTimeOver(false);\n    setTime(newTime ? newTime : initialTime);\n  }, [initialTime]);\n\n  const start = useCallback(() => {\n    if (isTimeOver) {\n      reset();\n    }\n\n    setIsRunning(true);\n  }, [reset, isTimeOver]);\n\n  const pause = useCallback(() => {\n    setIsRunning(false);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && time === endTime) {\n      setIsRunning(false);\n      setIsTimeOver(true);\n\n      if (typeof onTimeOver === \"function\") {\n        onTimeOver();\n      }\n    }\n  }, [endTime, onTimeOver, time, isRunning]);\n\n  useEffect(() => {\n    let intervalId = null;\n\n    if (isRunning) {\n      intervalId = setInterval(() => {\n        setTime((previousTime) =>\n          timerType === \"DECREMENTAL\"\n            ? previousTime - step\n            : previousTime + step\n        );\n      }, interval);\n    } else if (intervalId) {\n      clearInterval(intervalId);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [isRunning, step, timerType, interval]);\n\n  return { isRunning, pause, reset, start, time };\n};\n\nexport default useTimer","import React, { useEffect, useState } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Plot from \"react-plotly.js\";\nimport spacetime from \"spacetime\";\nimport useFetchNodes from \"../../hooks/useFetchNodes\";\nimport useTimer from \"../../hooks/useTimer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useFetchData from \"../../hooks/useFetchData\";\nimport {generateRandomFile, fillPathsWithData} from \"../../helpers\";\n\nconst useStyles = makeStyles((theme) => ({\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vw\",\n    paddingTop: \"25%\",\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    color: \"white\",\n  },\n}));\n\nconst layout = {\n  dragmode: \"zoom\",\n  mapbox: {\n    style: \"open-street-map\",\n    center: { lat: 51.11, lon: 17.03 },\n    margin: { r: 0, t: 0, b: 0, l: 0 },\n    zoom: 11,\n  },\n  autosize: true,\n  showlegend: false,\n  updatemenus: [\n    {\n      buttons: [\n        {\n          method: \"update\",\n          args: [\"play\"],\n          label: \"Play\",\n        },\n        {\n          method: \"update\",\n          args: [\"pause\"],\n          label: \"Pause\",\n        },\n      ],\n      name: \"action\",\n      direction: \"left\",\n      pad: { t: 10 },\n      showactive: true,\n      type: \"buttons\",\n      x: 0.0,\n      xanchor: \"left\",\n      y: 1.1,\n      yanchor: \"top\",\n    },\n    {\n      buttons: [\n        {\n          args: [3, 31],\n          label: \"March\",\n          method: \"update\",\n        },\n        {\n          args: [4, 30],\n          label: \"April\",\n          method: \"update\",\n        },\n        {\n          args: [5, 31],\n          label: \"May\",\n          method: \"update\",\n        },\n        {\n          args: [6, 30],\n          label: \"June\",\n          method: \"update\",\n        },\n        {\n          args: [7, 31],\n          label: \"July\",\n          method: \"update\",\n        },\n        {\n          args: [8, 31],\n          label: \"August\",\n          method: \"update\",\n        },\n        {\n          args: [9, 30],\n          label: \"September\",\n          method: \"update\",\n        },\n        {\n          args: [10, 31],\n          label: \"October\",\n          method: \"update\",\n        },\n        {\n          args: [11, 30],\n          label: \"November\",\n          method: \"update\",\n        },\n        {\n          args: [12, 31],\n          label: \"December\",\n          method: \"update\",\n        },\n      ],\n      name: \"month\",\n      direction: \"down\",\n      pad: { t: 10 },\n      showactive: true,\n      type: \"dropdown\",\n      x: 0.0,\n      xanchor: \"left\",\n      y: 1.15,\n      yanchor: \"top\",\n      active: 0,\n      font: { color: \"#5072a8\" },\n    },\n  ],\n  sliders: [\n    {\n      pad: { t: 5, b: 10 },\n      x: 0.15,\n      y: 1.11,\n      len: 0.85,\n      currentvalue: {\n        visible: true,\n        xanchor: \"right\",\n        prefix: \"Hour: \",\n        font: {\n          color: \"#888\",\n          size: 20,\n        },\n      },\n      active: 0,\n      name: \"Hour\",\n      steps: Array(1440 / 15)\n        .fill(0)\n        .map((val, id) => ({\n          label: `${Math.floor((id * 15) / 60)}:${\n            (id * 15) % 60 === 0 ? \"00\" : (id * 15) % 60\n          }`,\n          args: [id],\n          method: \"update\",\n        })),\n    },\n  ],\n};\n\nconst Network = () => {\n  const classes = useStyles();\n  const [frames, setFrames] = useState([]);\n  const [frameId, setFrameId] = useState(0);\n  const [day, setDay] = useState(1);\n  const [month, setMonth] = useState({ num: 7, days: 31 });\n  const [{ nodes, paths }, isLoading, isError] = useFetchNodes();\n  const [\n    { data: monthData, isLoading: isMonthLoading },\n    doFetchMonth,\n  ] = useFetchData(\"07.json\", {});\n  const randomFile = generateRandomFile();\n  const { time, start, pause, reset, isRunning } = useTimer({\n    endTime: 1440 / 15,\n    initialTime: frameId,\n  });\n  layout.sliders[0].active = time;\n  layout.sliders[1] = {\n    pad: { t: 5, b: 10 },\n    x: 0.15,\n    y: 1.22,\n    len: 0.85,\n    currentvalue: {\n      visible: true,\n      xanchor: \"right\",\n      prefix: \"Day: \",\n      font: {\n        color: \"#888\",\n        size: 12,\n      },\n    },\n    active: day - 1,\n    name: \"Day\",\n    steps: Array(month.days)\n      .fill(0)\n      .map((val, id) => ({\n        label: id + 1,\n        args: [id + 1],\n        method: \"update\",\n      })),\n  };\n\n  useEffect(() => {\n    if(monthData != null && monthData['1'] != null) {\n      setFrames(\n        Array(1440 / 15)\n          .fill(0)\n          .map((val, id) => [...nodes.list, ...monthData[day][id*15].map(fillPathsWithData(paths.obj, nodes.obj)).slice(0,50)])\n      );\n\n    } else {\n      setFrames(\n        Array(1440 / 15)\n          .fill(0)\n          .map((val, id) => [...nodes.list])\n      );\n    }\n  }, [isLoading, isMonthLoading, day]);\n  const data = frames[time] || [];\n  const buttonClick = ({menu: {name}, button: {args}}) => {\n    if(name === 'month') {\n      setFrameId(0);\n      reset(0);\n      setMonth({num: args[0], days: args[1]})\n      setDay(1)\n    } else {\n      switch (args[0]) {\n        case \"play\":\n          start();\n          break;\n        case \"pause\":\n          pause();\n          break;\n        default:\n          console.log(args[0]);\n          break;\n      }\n    }\n  };\n  const sliderChange = ({ slider: { name }, step: { args } }) => {\n    if (name === \"Hour\") {\n      setFrameId(args[0]);\n      reset(args[0]);\n    }\n    if (name === \"Day\") {\n      setDay(args[0]);\n      setFrameId(0);\n      reset(0);\n    }\n  };\n  return (\n    <React.Fragment>\n      <Plot\n        data={data}\n        layout={layout}\n        frames={Array(frames.length)\n          .fill(0)\n          .map((i, id) => ({\n            name: id,\n          }))}\n        onButtonClicked={buttonClick}\n        onSliderChange={sliderChange}\n        useResizeHandler={true}\n        style={{ width: \"100%\", minHeight: \"calc(100vh - 70px)\" }}\n      />\n      {(isLoading) && (\n        <div className={classes.overlay}>\n          <CircularProgress color=\"secondary\" size={80} thickness={4} />\n          <h1>Network data is loading... Please wait :)</h1>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Network;\n","import React from \"react\";\nimport Layout from \"../Layout/Layout\";\nimport Network from \"../Network/Network\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Network />\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}